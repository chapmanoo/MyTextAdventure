package main;

public class GameManager {
	
	boolean isFirstLook = true;
	
	private String[] validCommands = {"look", "n", "north", "e", "east", "s", "south", "w", "west"};
	
	public double distanceToTreasure(Object a, Object b)
	{
		double toReturn =  Math.hypot(a.getObjPosX() - b.getObjPosX(), a.getObjPosY() - b.getObjPosY());
		
		return Math.round(toReturn*10)/100;
	}
	
	public String playerMove (Player player, String dir) {
		String toReturn = "";
		if (dir.toLowerCase().equals("north") || dir.toLowerCase().equals("n")) {
			player.setObjPosY(player.getObjPosY()+1);
			toReturn = "Moved North";
			player.setScore(player.getScore()-1);
			}
		if (dir.toLowerCase().equals("south") || dir.toLowerCase().equals("s")) {
			player.setObjPosY(player.getObjPosY()-1);
			toReturn = "Moved South";
			((Player)player).setScore(((Player)player).getScore()-1);
		}
		if (dir.toLowerCase().equals("east") || dir.toLowerCase().equals("e")) {
			player.setObjPosX(player.getObjPosX()+1);
			toReturn = "Moved East";
			player.setScore(player.getScore()-1);
		}
		if (dir.toLowerCase().equals("west") || dir.toLowerCase().equals("w")) {
			player.setObjPosX(player.getObjPosX()-1);
			toReturn = "Moved West";
			player.setScore(player.getScore()-1);
		}
		
		return toReturn;
	}
	
	public String manageInput(Player a, Object b, String input)
	{
		String toReturn = "";
		boolean isValid = false;
		for(String i : validCommands)
		{
			if(input.toLowerCase().equals(i.toLowerCase()))
			{
				isValid = true;
				break;
			} else {
				toReturn = "Nothing seems to happen";
			}
		}
		
		if (isValid)
		{
			if (input.toLowerCase().equals("look"))
			{
				if (isFirstLook) {
					toReturn = "You notice a small watch-like device in your left hand. \nIt has hands like a watch, but the hands don't seem to tell time.";
					isFirstLook = false;
				} else {
				toReturn = "The treasure is : " + distanceToTreasure(a, b) + "m away!";
				}
			} else 
			{
				toReturn = playerMove(a, input);
			}
		}
		
		return toReturn;
	}

}
